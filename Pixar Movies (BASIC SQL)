Create Table Movies
  (ID INT PRIMARY KEY,
   Title VARCHAR(50),
   Director VARCHAR(50),
   Year INT,
   Length_minutes INT) ;


INSERT INTO movies Values
(1, 'Toy Story', 'John Lasseter', 1995, 81),
(2, 'A Bug's Life', 'John Lasseter', 1998, 95),
(3, 'Toy Story 2', 'John Lasseter', 1999, 93)
(4, 'Monsters Inc.', 'Pete Docter', 2001, 92),
(5, Finding Nemo, Andrew Stanton, 2003, 107)
(6, 'The Incredibles', 'Brad Bird', 2004, 116)
(7,'Cars', 'John Lasseter', 2006, 117)
(8, 'Ratatouille', 'Brad Bird', 2007, 115)
(9, 'Wall-E', 'Andrew Stanton', 2008, 104)
(10, 'UP', 'Peter Docter', 2009, 101)
(11, 'Toy Story 3', 'Lee Unkrich', 2010, 103)
(12, 'Cars 2', 'John Lasseter', 2012, 102)
(13, 'Brave', 'Andrew stanton', 2013, 110)
(14, 'Monsters University', 'Dan Schalon', 2013, 102);

create table Boxoffice
(Movie_ID INT,
Rating DECIMAL,
Domestic_sales INT,
International_sales INT)

Insert into Boxoffice values
(5, 8, 380843261, 555900000),
(14, 7, 268492764, 475066843),
(12, 6, 191452396, 368400000),
(3, 8, 245852179, 239163000),
(6, 8, 261441092, 370001000),
(9, 9, 223808164, 297503696),
(11, 8, 415004880, 648167031),
(1, 8, 191796233, 170162503),
(7, 7, 244082982, 217900167),
(10, 8, 293004164, 438338580),
(4, 8,289916256, 72900000),
(2, 7, 162798565, 200600000),
(13, 7, 237283207, 301700000),

****List all directors of Pixar movies (alphabetically), without duplicates ****
SELECT DISTINCT director FROM movies
order by director asc ;

****List the last four Pixar movies released (ordered from most recent to least)****
SELECT title, year FROM movies
ORDER BY YEAR DESC
LIMIT 4 ;

****List the first five Pixar movies sorted alphabetically ****
SELECT title, year FROM movies
order by title asc
LIMIT 5 ;

****List the next five Pixar movies sorted alphabetically****
SELECT title, year FROM movies
order by title asc
LIMIT 5 
OFFSET 5;

*****Find the number of movies each director has directed*****
SELECT count(title),director 
FROM movies
group by director;



***************JOINS***************

****Find the total domestic and international sales that can be attributed to each director**** 
select sum(domestic_sales+international_sales), director
from Movies m
left join boxoffice b
on m.id = b.movie_id
group by director


****List all the movies by their ratings in descending order****
SELECT title, rating FROM movies
JOIN Boxoffice
ON movies.id = Boxoffice.Movie_id 
order by Rating Desc ;

Show the sales numbers for each movie that did better internationally rather than domestically 

SELECT title, Domestic_sales, International_sales
FROM Movies
JOIN Boxoffice
ON Movies.id = Boxoffice.Movie_id
WHERE International_sales > Domestic_ sales ;

****Find the domestic and international sales for each movie****
SELECT title, Domestic_sales, International_sales
FROM Movies
JOIN Boxoffice
ON Movies.id = Boxoffice.Movie_id ;




*********************** MORE COMPLICATED QUERIES**************************




